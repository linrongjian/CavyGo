// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package minGamePb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 游戏ID
type GameId int32

const (
	GameId_BattlePlatform  GameId = 1
	GameId_WallsNotFall    GameId = 2
	GameId_PICKON          GameId = 1000
	GameId_Crayfish        GameId = 1001
	GameId_West            GameId = 1002
	GameId_XiuXian         GameId = 1003
	GameId_Shrimp          GameId = 1004
	GameId_LuckyCat        GameId = 1005
	GameId_LuckyCatIOS     GameId = 100501
	GameId_LuckyCatAndroid GameId = 100502
)

var GameId_name = map[int32]string{
	1:      "BattlePlatform",
	2:      "WallsNotFall",
	1000:   "PICKON",
	1001:   "Crayfish",
	1002:   "West",
	1003:   "XiuXian",
	1004:   "Shrimp",
	1005:   "LuckyCat",
	100501: "LuckyCatIOS",
	100502: "LuckyCatAndroid",
}

var GameId_value = map[string]int32{
	"BattlePlatform":  1,
	"WallsNotFall":    2,
	"PICKON":          1000,
	"Crayfish":        1001,
	"West":            1002,
	"XiuXian":         1003,
	"Shrimp":          1004,
	"LuckyCat":        1005,
	"LuckyCatIOS":     100501,
	"LuckyCatAndroid": 100502,
}

func (x GameId) Enum() *GameId {
	p := new(GameId)
	*p = x
	return p
}

func (x GameId) String() string {
	return proto.EnumName(GameId_name, int32(x))
}

func (x *GameId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameId_value, data, "GameId")
	if err != nil {
		return err
	}
	*x = GameId(value)
	return nil
}

func (GameId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

// HTTP 请求返回头
type HTTPResponse struct {
	Result               *int32   `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HTTPResponse) Reset()         { *m = HTTPResponse{} }
func (m *HTTPResponse) String() string { return proto.CompactTextString(m) }
func (*HTTPResponse) ProtoMessage()    {}
func (*HTTPResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

func (m *HTTPResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTPResponse.Unmarshal(m, b)
}
func (m *HTTPResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTPResponse.Marshal(b, m, deterministic)
}
func (m *HTTPResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTPResponse.Merge(m, src)
}
func (m *HTTPResponse) XXX_Size() int {
	return xxx_messageInfo_HTTPResponse.Size(m)
}
func (m *HTTPResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTPResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HTTPResponse proto.InternalMessageInfo

func (m *HTTPResponse) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *HTTPResponse) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *HTTPResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("minGamePb.GameId", GameId_name, GameId_value)
	proto.RegisterType((*HTTPResponse)(nil), "minGamePb.HTTPResponse")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_555bd8c177793206) }

var fileDescriptor_555bd8c177793206 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8c, 0xcf, 0x4e, 0xf2, 0x40,
	0x14, 0x47, 0x33, 0xc0, 0xd7, 0xf9, 0xb8, 0x54, 0xbd, 0xde, 0x44, 0xc3, 0x92, 0xb8, 0x6a, 0x5c,
	0xf8, 0x0e, 0xda, 0x44, 0x6d, 0x24, 0xd0, 0x14, 0x12, 0xd8, 0x8e, 0x74, 0x90, 0x89, 0x33, 0x9d,
	0x66, 0x66, 0xba, 0xe0, 0x31, 0x58, 0xe8, 0x3b, 0xf8, 0x66, 0xfe, 0x7d, 0x07, 0x53, 0x22, 0xbb,
	0x73, 0x7e, 0xc9, 0xf9, 0x41, 0xbc, 0xb2, 0xc6, 0xd8, 0xea, 0xaa, 0x76, 0x36, 0x58, 0xea, 0x1b,
	0x55, 0xdd, 0x09, 0x23, 0xf3, 0xc7, 0x8b, 0x31, 0xc4, 0xf7, 0xf3, 0x79, 0x5e, 0x48, 0x5f, 0xdb,
	0xca, 0x4b, 0x3a, 0x87, 0xc8, 0x49, 0xdf, 0xe8, 0x30, 0x64, 0x23, 0x96, 0xfc, 0x2b, 0xfe, 0x8c,
	0x10, 0xba, 0xc6, 0x3f, 0x0d, 0x3b, 0x23, 0x96, 0xf4, 0x8b, 0x16, 0x89, 0xa0, 0x57, 0x8a, 0x20,
	0x86, 0xdd, 0x11, 0x4b, 0xe2, 0x62, 0xcf, 0x97, 0x6f, 0x0c, 0xa2, 0xf6, 0x38, 0x2b, 0x89, 0xe0,
	0xf8, 0x46, 0x84, 0xa0, 0x65, 0xae, 0x45, 0x58, 0x5b, 0x67, 0x90, 0x11, 0x42, 0xbc, 0x10, 0x5a,
	0xfb, 0x89, 0x0d, 0xb7, 0x42, 0x6b, 0xec, 0xd0, 0x00, 0xa2, 0x3c, 0x4b, 0x1f, 0xa6, 0x13, 0x7c,
	0xe7, 0x74, 0x04, 0xff, 0x53, 0x27, 0xb6, 0x6b, 0xe5, 0x37, 0xf8, 0xc1, 0xa9, 0x0f, 0xbd, 0x85,
	0xf4, 0x01, 0x3f, 0x39, 0xc5, 0xc0, 0x97, 0xaa, 0x59, 0x2a, 0x51, 0xe1, 0x17, 0x6f, 0xa3, 0xd9,
	0xc6, 0x29, 0x53, 0xe3, 0xf7, 0x3e, 0x1a, 0x37, 0xab, 0xe7, 0x6d, 0x2a, 0x02, 0xfe, 0x70, 0x3a,
	0x85, 0xc1, 0x41, 0xb3, 0xe9, 0x0c, 0x5f, 0x76, 0x11, 0x9d, 0xc1, 0xc9, 0x61, 0xba, 0xae, 0x4a,
	0x67, 0x55, 0x89, 0xaf, 0xbb, 0xe8, 0x37, 0x00, 0x00, 0xff, 0xff, 0xa0, 0xdf, 0xa3, 0xa9, 0x13,
	0x01, 0x00, 0x00,
}

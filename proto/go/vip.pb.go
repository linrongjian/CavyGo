// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vip.proto

package minGamePb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// vip信息
type VipInfoResp struct {
	MaxVipLevel          *int32   `protobuf:"varint,1,opt,name=maxVipLevel" json:"maxVipLevel,omitempty"`
	ReceivedVipCfgIDs    []string `protobuf:"bytes,2,rep,name=receivedVipCfgIDs" json:"receivedVipCfgIDs,omitempty"`
	ReceivedVipSubCfgIDs []string `protobuf:"bytes,3,rep,name=receivedVipSubCfgIDs" json:"receivedVipSubCfgIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VipInfoResp) Reset()         { *m = VipInfoResp{} }
func (m *VipInfoResp) String() string { return proto.CompactTextString(m) }
func (*VipInfoResp) ProtoMessage()    {}
func (*VipInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2670e1a48005ac67, []int{0}
}

func (m *VipInfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VipInfoResp.Unmarshal(m, b)
}
func (m *VipInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VipInfoResp.Marshal(b, m, deterministic)
}
func (m *VipInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VipInfoResp.Merge(m, src)
}
func (m *VipInfoResp) XXX_Size() int {
	return xxx_messageInfo_VipInfoResp.Size(m)
}
func (m *VipInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_VipInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_VipInfoResp proto.InternalMessageInfo

func (m *VipInfoResp) GetMaxVipLevel() int32 {
	if m != nil && m.MaxVipLevel != nil {
		return *m.MaxVipLevel
	}
	return 0
}

func (m *VipInfoResp) GetReceivedVipCfgIDs() []string {
	if m != nil {
		return m.ReceivedVipCfgIDs
	}
	return nil
}

func (m *VipInfoResp) GetReceivedVipSubCfgIDs() []string {
	if m != nil {
		return m.ReceivedVipSubCfgIDs
	}
	return nil
}

// 领取vip奖励
type VipReceiveReq struct {
	CfgID                *string  `protobuf:"bytes,1,opt,name=cfgID" json:"cfgID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VipReceiveReq) Reset()         { *m = VipReceiveReq{} }
func (m *VipReceiveReq) String() string { return proto.CompactTextString(m) }
func (*VipReceiveReq) ProtoMessage()    {}
func (*VipReceiveReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2670e1a48005ac67, []int{1}
}

func (m *VipReceiveReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VipReceiveReq.Unmarshal(m, b)
}
func (m *VipReceiveReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VipReceiveReq.Marshal(b, m, deterministic)
}
func (m *VipReceiveReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VipReceiveReq.Merge(m, src)
}
func (m *VipReceiveReq) XXX_Size() int {
	return xxx_messageInfo_VipReceiveReq.Size(m)
}
func (m *VipReceiveReq) XXX_DiscardUnknown() {
	xxx_messageInfo_VipReceiveReq.DiscardUnknown(m)
}

var xxx_messageInfo_VipReceiveReq proto.InternalMessageInfo

func (m *VipReceiveReq) GetCfgID() string {
	if m != nil && m.CfgID != nil {
		return *m.CfgID
	}
	return ""
}

// vip领取返回数据
type VipAwardResp struct {
	//OpResult             *OpResult `protobuf:"bytes,1,opt,name=opResult" json:"opResult,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *VipAwardResp) Reset()         { *m = VipAwardResp{} }
func (m *VipAwardResp) String() string { return proto.CompactTextString(m) }
func (*VipAwardResp) ProtoMessage()    {}
func (*VipAwardResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2670e1a48005ac67, []int{2}
}

func (m *VipAwardResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VipAwardResp.Unmarshal(m, b)
}
func (m *VipAwardResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VipAwardResp.Marshal(b, m, deterministic)
}
func (m *VipAwardResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VipAwardResp.Merge(m, src)
}
func (m *VipAwardResp) XXX_Size() int {
	return xxx_messageInfo_VipAwardResp.Size(m)
}
func (m *VipAwardResp) XXX_DiscardUnknown() {
	xxx_messageInfo_VipAwardResp.DiscardUnknown(m)
}

var xxx_messageInfo_VipAwardResp proto.InternalMessageInfo
//
//func (m *VipAwardResp) GetOpResult() *OpResult {
//	if m != nil {
//		return m.OpResult
//	}
//	return nil
//}

func init() {
	proto.RegisterType((*VipInfoResp)(nil), "goddess.VipInfoResp")
	proto.RegisterType((*VipReceiveReq)(nil), "goddess.VipReceiveReq")
	proto.RegisterType((*VipAwardResp)(nil), "goddess.VipAwardResp")
}

func init() {
	proto.RegisterFile("vip.proto", fileDescriptor_2670e1a48005ac67)
}

var fileDescriptor_2670e1a48005ac67 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0xcb, 0x2c, 0xd0,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4f, 0xcf, 0x4f, 0x49, 0x49, 0x2d, 0x2e, 0x96, 0xe2,
	0xcf, 0x2f, 0x88, 0x2f, 0x4a, 0x2d, 0x2e, 0xcd, 0x29, 0x81, 0xc8, 0x28, 0x4d, 0x64, 0xe4, 0xe2,
	0x0e, 0xcb, 0x2c, 0xf0, 0xcc, 0x4b, 0xcb, 0x0f, 0x4a, 0x2d, 0x2e, 0x10, 0x52, 0xe0, 0xe2, 0xce,
	0x4d, 0xac, 0x08, 0xcb, 0x2c, 0xf0, 0x49, 0x2d, 0x4b, 0xcd, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60,
	0x0d, 0x42, 0x16, 0x12, 0xd2, 0xe1, 0x12, 0x2c, 0x4a, 0x4d, 0x4e, 0xcd, 0x2c, 0x4b, 0x4d, 0x09,
	0xcb, 0x2c, 0x70, 0x4e, 0x4b, 0xf7, 0x74, 0x29, 0x96, 0x60, 0x52, 0x60, 0xd6, 0xe0, 0x0c, 0xc2,
	0x94, 0x10, 0x32, 0xe2, 0x12, 0x41, 0x12, 0x0c, 0x2e, 0x4d, 0x82, 0x6a, 0x60, 0x06, 0x6b, 0xc0,
	0x2a, 0xa7, 0xa4, 0xca, 0xc5, 0x1b, 0x96, 0x59, 0x10, 0x04, 0x91, 0x0a, 0x4a, 0x2d, 0x14, 0x12,
	0xe1, 0x62, 0x4d, 0x06, 0x49, 0x81, 0x9d, 0xc3, 0x19, 0x04, 0xe1, 0x28, 0xd9, 0x72, 0xf1, 0x84,
	0x65, 0x16, 0x38, 0x96, 0x27, 0x16, 0xa5, 0x80, 0x9d, 0xae, 0xcb, 0xc5, 0x91, 0x5f, 0x10, 0x04,
	0xf6, 0x1c, 0x58, 0x21, 0xb7, 0x91, 0xa0, 0x1e, 0xd4, 0xdf, 0x7a, 0xfe, 0x50, 0x89, 0x20, 0xb8,
	0x12, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd7, 0x7f, 0x9e, 0x49, 0x1f, 0x01, 0x00, 0x00,
}
